{
  "openapi": "3.0.0",
  "servers": [
    {
      "url": "https://{country}-partnerapi.just-eat.io",
      "description": "live / production",
      "variables": {
        "country": {
          "enum": [
            "au",
            "ca",
            "dk",
            "es",
            "ie",
            "it",
            "nz",
            "uk"
          ]
        }
      }
    },
    {
      "url": "https://staging-{country}-partnerapi.just-eat.io",
      "description": "test / staging",
      "variables": {
        "country": {
          "enum": [
            "au",
            "ca",
            "dk",
            "es",
            "ie",
            "it",
            "nz",
            "uk"
          ]
        }
      }
    }
  ],
  "externalDocs": {
    "description": "JUST EAT Developer Contextual Documentation",
    "url": "https://developers.justeat.com"
  },
  "info": {
    "version": "v1",
    "title": "JUST EAT Partner API Docs",
    "x-logo": {
      "url": "https://raw.githubusercontent.com/justeat/partnerapi-docs/master/web/logo-just-eat.png"
    },
    "description": "# Getting Started\n## Security\n### HTTPS\nAll api calls and callbacks require HTTPS. Your service will need a valid SSL certificate and be accesible via the standard SSL port (port 443).\n## Making an api request\nPUT https://uk-partnerapi.just-eat.io/orders/abcd1234 HTTP/1.1<br/> Host: uk-partnerapi.just-eat.io/<br/> Content-Length: 1000<br/> Content-Type: application/json<br/> Authorization: JE-API-KEY abcd123456789\n## Data Formats\n### Date and time formats\nAll dates and times should use the [ISO 8601 standard for representation of dates and times](https://en.wikipedia.org/wiki/ISO_8601).\n\nTimes recorded by Just Eat are either stored in:<br/> - UTC time standard with no offset; OR<br/> - Local time with an accompanying offset to UTC time\n\nAll properties ending with \"WithUtcOffset\" contain local time along with an offset to UTC time.\n\nFor instance:\n\n**DueDateWithUtcOffset**: \"2015-05-26T14:52:35.5444292+01:00\"<br/> Local time: 14:52<br />  UTC time: 13:52<br />  UTC offset: +1hr (due to daylight time saving)\n\n**DueDateWithUtcOffset**: \"2015-02-03T11:10:00.0000000+00:00\"<br /> Local time: 11:10<br /> UTC time: 11:10<br /> UTC offset: 0 (no daylight time saving, local time is equivalent to UTC)\n\nNote that the offset may be for a timezone different to your own, so you should alway convert to your own local time for display purposes (e.g. on receipts and terminals).\n\n### Callback timestamps\nIdeally, timestamps sent to Just Eat should be recorded as the current local time (including any changes needed to account for daylight saving) with an accompanying offset that shows the difference between the recorded local time and the current UTC time.  \n\nIf it is not possible to record timestamps in local time, timestamps may be recorded in UTC time with a 00:00 offset. "
  },
  "schemes": [
    "https"
  ],
  "components": {
    "securitySchemes": {
      "API Key": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "<p>All api calls require an Authorization Key which will be provided by JUST EAT.<p><p>The key needs to be provided in the header as follows: </p><p><b>Authorization: JE-API-KEY {Your-Key-Here}</b></p>. The key is case sensitive."
      }
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "restaurant-api",
      "x-displayName": "Restaurant Webhooks"
    },
    {
      "name": "restaurant-api",
      "x-displayName": "Restaurant API"
    },
    {
      "name": "order-delivery-webhooks",
      "x-displayName": "Order Delivery Webhooks"
    },
    {
      "name": "order-acceptance-api",
      "x-displayName": "Order Acceptance API"
    },
    {
      "name": "order-api",
      "x-displayName": "Order API"
    },
    {
      "name": "order-webhooks",
      "x-displayName": "Order Webhooks"
    },
    {
      "name": "order-delivery-api",
      "x-displayName": "Order Delivery API"
    },
    {
      "name": "delivery-pools-api",
      "x-displayName": "Delivery Pools API"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Delivery Pools",
      "tags": [
        "delivery-pools-api"
      ]
    },
    {
      "name": "Order Acceptance",
      "tags": [
        "order-acceptance-api"
      ]
    },
    {
      "name": "Orders",
      "tags": [
        "order-api",
        "order-webhooks"
      ]
    },
    {
      "name": "Order Delivery",
      "tags": [
        "order-delivery-api",
        "order-delivery-webhooks"
      ]
    },
    {
      "name": "Restaurants",
      "tags": [
        "restaurant-api",
        "restaurant-webhooks"
      ]
    }
  ],
  "paths": {
    "/delivery/pools": {
      "get": {
        "tags": [
          "delivery-pools-api"
        ],
        "summary": "Get your delivery pools",
        "description": "A delivery pool is a named group of drivers which deliver food for a set of restaurants.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "delivery-pool-id": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the pool, used by operations teams, in reports, etc."
                        },
                        "restaurants": {
                          "description": "An array of JUST EAT restaurant ids served by the pool.",
                          "type": "array",
                          "items": {
                            "type": "number",
                            "format": "int32"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "d5f72466a6dd49a08166d5a044c5b9e4": {
                        "name": "Toronto - West",
                        "restaurants": [
                          123,
                          456
                        ]
                      },
                      "b9c6673b8e5948b98cfbd14a982de2c2": {
                        "name": "Toronto - East",
                        "restaurants": [
                          789
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "delivery-pools-api"
        ],
        "summary": "Create a new delivery pool",
        "description": "A delivery pool is a named group of drivers which deliver food for a set of restaurants.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the pool, used by operations teams, in reports, etc."
                  },
                  "restaurantIds": {
                    "description": "An array of JUST EAT restaurant ids served by the pool.",
                    "type": "array",
                    "items": {
                      "type": "number",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pool has been created."
          },
          "400": {
            "description": "There was something invalid in your request - check response body for details"
          }
        }
      }
    },
    "/delivery/pools/{deliveryPoolId}": {
      "parameters": [
        {
          "name": "deliveryPoolId",
          "in": "path",
          "required": true,
          "description": "Identifier for the pool",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "delivery-pools-api"
        ],
        "summary": "Get an individual delivery pool",
        "description": "A delivery pool is a named group of drivers which deliver food for a set of restaurants.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of the pool, used by operations teams, in reports, etc."
                    },
                    "restaurants": {
                      "description": "An array of JUST EAT restaurant ids served by the pool.",
                      "type": "array",
                      "items": {
                        "type": "number",
                        "format": "int32"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "name": "Toronto - West",
                      "restaurants": [
                        123,
                        456
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The pool could not be found"
          }
        }
      },
      "delete": {
        "tags": [
          "delivery-pools-api"
        ],
        "summary": "Delete a delivery pool",
        "description": "The restaurants will no longer be associated with the pool.",
        "responses": {
          "200": {
            "description": "Pool deleted"
          },
          "404": {
            "description": "The pool could not be found"
          }
        }
      },
      "patch": {
        "tags": [
          "delivery-pools-api"
        ],
        "summary": "Modify a delivery pool",
        "description": "Modify a delivery pool, changing its name, restaurants or both",
        "requestBody": {
          "required": true,
          "description": "Request body should contain an object with either or  both of the properties. If a property is not specified then the  existing values are retained.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the pool, used by operations teams, in reports, etc."
                  },
                  "restaurantIds": {
                    "description": "An array of JUST EAT restaurant ids served by the pool.",
                    "type": "array",
                    "items": {
                      "type": "number",
                      "format": "int32"
                    }
                  }
                },
                "example": {
                  "name": "Toronto - West",
                  "restaurants": [
                    123,
                    456
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pool has been updated"
          },
          "400": {
            "description": "There was something invalid in your request - check response body for details"
          },
          "404": {
            "description": "The pool could not be found"
          }
        }
      }
    },
    "/delivery/pools/{deliveryPoolId}/availability/relative": {
      "parameters": [
        {
          "name": "deliveryPoolId",
          "in": "path",
          "required": true,
          "description": "Identifier for the pool",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "delivery-pools-api"
        ],
        "summary": "Get availability for pickup",
        "description": "Get the current amount of time it will take a driver to collect a new order from a restaurant in the pool.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bestGuess": {
                      "type": "string",
                      "description": "Your best estimation (hh:mm:ss)"
                    }
                  }
                },
                "examples": {
                  "request": {
                    "value": {
                      "bestGuess": "00:35:00"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The pool could not be found"
          }
        }
      },
      "put": {
        "tags": [
          "delivery-pools-api"
        ],
        "summary": "Set availability for pickup",
        "description": "Set the average amount of time it will take a driver to collect a new order from a restaurant in the pool.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bestGuess": {
                    "type": "string",
                    "description": "Your best estimation (hh:mm:ss)"
                  }
                },
                "example": {
                  "bestGuess": "00:35:00"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Update will take effect shortly"
          },
          "404": {
            "description": "The pool could not be found"
          }
        }
      }
    },
    "/orders/{orderId}/status": {
      "put": {
        "tags": [
          "order-acceptance-api"
        ],
        "summary": "Set Order status",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerId",
            "in": "query",
            "required": true,
            "type": "integer"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/order-status-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/delivery/deliverablerestaurants": {
      "get": {
        "tags": [
          "order-delivery-api"
        ],
        "summary": "Get deliverable restaurants",
        "parameters": [
          {
            "name": "toLat",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "toLon",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "toPostcode",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/deliverable-restaurants"
                }
              }
            }
          }
        }
      }
    },
    "/delivery/estimate": {
      "get": {
        "tags": [
          "order-delivery-api"
        ],
        "summary": "Get delivery estimate",
        "parameters": [
          {
            "name": "restaurantReference",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "toLat",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toLon",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toPostcode",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/estimated-delivery-time"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/orders/{orderId}/deliverystate/atdeliveryaddress": {
      "put": {
        "tags": [
          "order-delivery-api"
        ],
        "summary": "Driver at delivery address",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/delivery-details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/{orderId}/deliverystate/atrestaurant": {
      "put": {
        "tags": [
          "order-delivery-api"
        ],
        "summary": "Driver at restaurant",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/delivery-details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/{orderId}/deliverystate/atrestauranteta": {
      "put": {
        "tags": [
          "order-delivery-api"
        ],
        "summary": "Driver at restaurant estimated time of arrival",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "estimatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "bestGuess": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/{orderId}/deliverystate/delivered": {
      "put": {
        "tags": [
          "order-delivery-api"
        ],
        "summary": "Order delivered",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/delivery-details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/{orderId}/deliverystate/driverassigned": {
      "put": {
        "tags": [
          "order-delivery-api"
        ],
        "summary": "Driver assigned to order",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/delivery-driver-assigned-details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/{orderId}/deliverystate/driverlocation": {
      "put": {
        "tags": [
          "order-delivery-api"
        ],
        "summary": "Current driver location",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/delivery-details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/{orderId}/deliverystate/onitsway": {
      "put": {
        "tags": [
          "order-delivery-api"
        ],
        "summary": "Order on its way",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/on-its-way-details"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders/deliverystate/driverlocation": {
      "put": {
        "tags": [
          "order-delivery-api"
        ],
        "summary": "Current driver location (bulk upload)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/bulk-delivery-details"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/driver-assigned-to-delivery": {
      "put": {
        "tags": [
          "order-delivery-webhooks"
        ],
        "summary": "Driver Assigned to Delivery",
        "description": "",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/driver-status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/driver-at-delivery-address": {
      "put": {
        "tags": [
          "order-delivery-webhooks"
        ],
        "summary": "Driver at delivery address",
        "description": "",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/driver-status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/driver-at-restaurant": {
      "put": {
        "tags": [
          "order-delivery-webhooks"
        ],
        "summary": "Driver at restaurant",
        "description": "",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/driver-status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/driver-has-delivered-order": {
      "put": {
        "tags": [
          "order-delivery-webhooks"
        ],
        "summary": "Driver has delivered order",
        "description": "",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/driver-status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/driver-on-their-way-to-delivery-address": {
      "put": {
        "tags": [
          "order-delivery-webhooks"
        ],
        "summary": "Driver on their way to delivery address",
        "description": "",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/driver-status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/order-requires-delivery-acceptance": {
      "post": {
        "tags": [
          "order-delivery-webhooks"
        ],
        "summary": "Order requires delivery acceptance",
        "description": "",
        "consumes": [],
        "produces": [
          "application/json"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/connectorder"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/orders": {
      "post": {
        "tags": [
          "order-api"
        ],
        "summary": "Create order",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/order-request"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/order-is-ready-for-preparation": {
      "post": {
        "tags": [
          "order-webhooks"
        ],
        "summary": "Order is ready to be prepared",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/order-is-ready-for-preparation"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "In the event of successful receipt of an Order, a 201 status code should be returned, indicating acknowledgement of transmission success."
          }
        }
      }
    },
    "/restaurants/{restaurantReference}/temporary-offline-status": {
      "put": {
        "tags": [
          "restaurant-api"
        ],
        "operationId": "UpdateRestaurantTemporaryOfflineStatus",
        "parameters": [
          {
            "name": "restaurantReference",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/partner-restaurant-temporary-offline-status"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/restaurant-details-updated": {
      "post": {
        "tags": [
          "restaurant-webhooks"
        ],
        "summary": "Restaurant Details Updated",
        "description": "",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string",
                    "format": "enum",
                    "enum": [
                      "RestaurantUpdated"
                    ]
                  },
                  "restaurants": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "integer",
                          "description": "The JUST EAT restaurant id"
                        },
                        "name": {
                          "type": "string"
                        },
                        "firstLine": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "postcode": {
                          "type": "string"
                        },
                        "latitude": {
                          "type": "number",
                          "format": "float"
                        },
                        "longitude": {
                          "type": "number",
                          "format": "float"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/restaurant-status-change": {
      "post": {
        "tags": [
          "restaurant-webhooks"
        ],
        "summary": "Restaurant Status Change",
        "description": "",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Event": {
                    "type": "string",
                    "format": "enum",
                    "enum": [
                      "RestaurantStatusChange"
                    ]
                  },
                  "RestaurantReference": {
                    "type": "string",
                    "description": "The JUST EAT Restaurant Id"
                  },
                  "Status": {
                    "type": "string",
                    "format": "enum",
                    "enum": [
                      "online",
                      "offline"
                    ]
                  },
                  "Message": {
                    "type": "string",
                    "deprecated": true,
                    "description": "This field should not be used but has been left in the callback for backwards compatability purposes"
                  }
                }
              },
              "examples": {
                "response": {
                  "value": {
                    "Event": "RestaurantStatusChange",
                    "Status": "online",
                    "RestaurantReference": "123abc"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "bulk-delivery-details": {
      "type": "object",
      "properties": {
        "OrderId": {
          "type": "string"
        },
        "Location": {
          "$ref": "#/definitions/location"
        },
        "TimeStampWithUtcOffset": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "deliverable-restaurant": {
      "type": "object",
      "properties": {
        "Restaurant": {
          "$ref": "#/definitions/deliveryable-restaurant-location-info"
        },
        "DeliveryDistanceInMetres": {
          "format": "int32",
          "type": "integer"
        },
        "DeliveryDurationInSeconds": {
          "format": "int32",
          "type": "integer"
        },
        "EstimatedWaitForDeliveryPickupInSeconds": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "deliverable-restaurants": {
      "type": "object",
      "properties": {
        "DeliveryLocation": {
          "$ref": "#/definitions/location"
        },
        "Restaurants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/deliverable-restaurant"
          }
        }
      }
    },
    "delivery-details": {
      "type": "object",
      "properties": {
        "Location": {
          "$ref": "#/definitions/location"
        },
        "TimeStampWithUtcOffset": {
          "format": "date-time",
          "type": "string"
        }
      },
      "example": {
        "TimeStampWithUtcOffset": "2018-03-10T14:45:28.7537228+00:00"
      }
    },
    "delivery-driver-assigned-details": {
      "type": "object",
      "properties": {
        "DriverName": {
          "type": "string"
        },
        "DriverContactNumber": {
          "type": "string"
        },
        "VehicleDetails": {
          "$ref": "#/definitions/vehicle-details"
        },
        "EstimatedArrivalTime": {
          "format": "date-time",
          "type": "string"
        },
        "Location": {
          "$ref": "#/definitions/location"
        },
        "TimeStampWithUtcOffset": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "deliveryable-restaurant-location-info": {
      "type": "object",
      "properties": {
        "RestaurantReference": {
          "type": "string"
        },
        "RestaurantId": {
          "type": "string"
        },
        "Latitude": {
          "format": "double",
          "type": "number"
        },
        "Longitude": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "estimated-delivery-time": {
      "type": "object",
      "properties": {
        "RestaurantReference": {
          "type": "string"
        },
        "DurationInMinutes": {
          "type": "string"
        }
      }
    },
    "on-its-way-details": {
      "type": "object",
      "properties": {
        "EstimatedArrivalTime": {
          "format": "date-time",
          "type": "string"
        },
        "Location": {
          "$ref": "#/definitions/location"
        },
        "TimeStampWithUtcOffset": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "vehicle-details": {
      "type": "object",
      "properties": {
        "Vehicle": {
          "type": "string"
        },
        "VehicleRegistration": {
          "type": "string"
        }
      }
    },
    "connectorder": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string"
        },
        "CustomerOrderId": {
          "format": "int32",
          "type": "number"
        },
        "FriendlyOrderReference": {
          "type": "string"
        },
        "OrderReference": {
          "type": "string"
        },
        "IsAMiniFistPumpOrder": {
          "type": "boolean"
        },
        "Order": {
          "type": "object",
          "properties": {
            "NoteToRestaurant": {
              "type": "string"
            },
            "ServiceType": {
              "type": "string",
              "enum": [
                "Collection",
                "Delivery"
              ]
            },
            "PlacedDate": {
              "type": "string",
              "format": "date-time"
            },
            "DueDate": {
              "type": "string",
              "format": "date-time"
            },
            "DueDateWithUtcOffset": {
              "type": "string",
              "format": "date-time"
            },
            "InitialDueDate": {
              "type": "string",
              "format": "date-time"
            },
            "InitialDueDateWithUtcOffset": {
              "type": "string",
              "format": "date-time"
            },
            "PromptAsap": {
              "type": "boolean"
            }
          }
        },
        "Restaurant": {
          "type": "object",
          "properties": {
            "Id": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "PhoneNumber": {
              "type": "string"
            },
            "AddressLines": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "City": {
              "type": "string"
            },
            "Postcode": {
              "type": "string"
            },
            "Longitude": {
              "type": "number",
              "format": "double"
            },
            "Latitude": {
              "type": "number",
              "format": "double"
            },
            "DispatchMethod": {
              "type": "string"
            },
            "EmailAddress": {
              "type": "string"
            }
          }
        },
        "Payment": {
          "type": "object",
          "properties": {
            "PaymentLines": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "Type": {
                    "type": "string",
                    "enum": [
                      "Card"
                    ]
                  },
                  "CardFee": {
                    "type": "number",
                    "format": "double"
                  },
                  "Value": {
                    "type": "number",
                    "format": "double"
                  }
                }
              }
            },
            "Total": {
              "type": "number",
              "format": "double"
            },
            "TotalComplementary": {
              "type": "number",
              "format": "double"
            },
            "PaidDate": {
              "type": "string",
              "format": "date-time"
            },
            "CashOnDelivery": {
              "type": "boolean"
            }
          }
        },
        "Customer": {
          "type": "object",
          "properties": {
            "Id": {
              "type": "string"
            },
            "Email": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "Address": {
              "type": "string"
            },
            "City": {
              "type": "string"
            },
            "Postcode": {
              "type": "string"
            },
            "Longitude": {
              "format": "double",
              "type": "number"
            },
            "Latitude": {
              "format": "double",
              "type": "number"
            },
            "PhoneNumber": {
              "type": "string"
            },
            "TimeZone": {
              "type": "string"
            },
            "PreviousRestuarantOrderCount": {
              "format": "int32",
              "type": "number"
            }
          }
        },
        "Basket": {
          "type": "object",
          "properties": {
            "BasketId": {
              "type": "string"
            },
            "MenuId": {
              "type": "number",
              "format": "int32"
            },
            "SubTotal": {
              "type": "number",
              "format": "double"
            },
            "ToSpend": {
              "type": "number",
              "format": "double"
            },
            "MultiBuyDiscount": {
              "type": "number",
              "format": "double"
            },
            "Discount": {
              "type": "number",
              "format": "double"
            },
            "DeliveryCharge": {
              "type": "number",
              "format": "double"
            },
            "Total": {
              "type": "number",
              "format": "double"
            },
            "Discounts": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "Id": {
                    "type": "number",
                    "format": "int32"
                  },
                  "Discount": {
                    "type": "number",
                    "format": "int32"
                  },
                  "DiscountType": {
                    "type": "string"
                  },
                  "QualifyingValue": {
                    "type": "number",
                    "format": "double"
                  }
                }
              }
            },
            "GroupedBasketItems": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "CombinedPrice": {
                    "type": "number",
                    "format": "double"
                  },
                  "Quantity": {
                    "type": "number",
                    "format": "int32"
                  },
                  "OrderSubId": {
                    "type": "number",
                    "format": "int32"
                  },
                  "MenuCardNumber": {
                    "type": "string"
                  },
                  "BasketItem": {
                    "type": "object",
                    "properties": {
                      "ProductId": {
                        "type": "number",
                        "format": "int32"
                      },
                      "ProductTypeId": {
                        "type": "number",
                        "format": "int32"
                      },
                      "MenuCardNumber": {
                        "type": "string"
                      },
                      "Name": {
                        "type": "string"
                      },
                      "Synonym": {
                        "type": "string"
                      },
                      "UnitPrice": {
                        "type": "number",
                        "format": "double"
                      },
                      "CombinedPrice": {
                        "type": "number",
                        "format": "double"
                      },
                      "MealParts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "MealPartId": {
                              "type": "number",
                              "format": "int32"
                            },
                            "GroupId": {
                              "type": "number",
                              "format": "int32"
                            },
                            "Name": {
                              "type": "string"
                            },
                            "Synonym": {
                              "type": "string"
                            },
                            "OptionalAccessories": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "OptionalAccessoryId": {
                                    "type": "number",
                                    "format": "int32"
                                  },
                                  "Quantity": {
                                    "type": "number",
                                    "format": "int32"
                                  },
                                  "UnitPrice": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "Name": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "RequiredAccessories": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "RequiredAccessoryId": {
                                    "type": "number",
                                    "format": "int32"
                                  },
                                  "GroupId": {
                                    "type": "number",
                                    "format": "int32"
                                  },
                                  "UnitPrice": {
                                    "type": "number",
                                    "format": "double"
                                  },
                                  "Name": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "OptionalAccessories": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "OptionalAccessoryId": {
                              "type": "number",
                              "format": "int32"
                            },
                            "Quantity": {
                              "type": "number",
                              "format": "int32"
                            },
                            "UnitPrice": {
                              "type": "number",
                              "format": "double"
                            },
                            "Name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "RequiredAccessories": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "RequiredAccessoryId": {
                              "type": "number",
                              "format": "int32"
                            },
                            "GroupId": {
                              "type": "number",
                              "format": "int32"
                            },
                            "UnitPrice": {
                              "type": "number",
                              "format": "double"
                            },
                            "Name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "Discounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Amount": {
                              "type": "number",
                              "format": "double"
                            },
                            "DiscountType": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "MultiBuyDiscounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "OrderItemId": {
                              "type": "string"
                            },
                            "Amount": {
                              "type": "number",
                              "format": "double"
                            },
                            "DiscountType": {
                              "type": "string"
                            },
                            "ProductTypeId": {
                              "type": "number",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "driver-status": {
      "type": "object",
      "properties": {
        "TimeStamp": {
          "type": "string",
          "format": "date-time"
        },
        "EstimatedPickupTime": {
          "type": "string",
          "format": "date-time"
        },
        "EstimatedDeliveryTime": {
          "type": "string",
          "format": "date-time"
        },
        "DriverName": {
          "type": "string"
        },
        "DriverContactNumber": {
          "type": "string"
        },
        "Event": {
          "type": "string",
          "enum": [
            "DriverAssigned",
            "DriverAtRestaurant",
            "OnItsWay",
            "AtDeliveryAddress",
            "Delivered"
          ]
        }
      }
    },
    "location": {
      "type": "object",
      "properties": {
        "Latitude": {
          "format": "double",
          "type": "number"
        },
        "Longitude": {
          "format": "double",
          "type": "number"
        },
        "Speed": {
          "format": "double",
          "type": "number"
        },
        "Heading": {
          "format": "double",
          "type": "number"
        },
        "Accuracy": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "Latitude",
        "Longitude"
      ],
      "example": {
        "Latitude": 51.51641,
        "Longitude": -0.103198,
        "Speed": 8.68,
        "Heading": 357.10382,
        "Accuracy": 12.814
      }
    },
    "object": {
      "type": "object"
    },
    "order-status-request": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "string",
          "enum": [
            "InKitchen",
            "FailedToSendToKitchen",
            "Accepted",
            "Rejected"
          ],
          "description": "The requested new state of the order"
        },
        "TimeStamp": {
          "format": "date-time",
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "Data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "TimeAcceptedFor": {
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "Status",
        "TimeStamp"
      ],
      "example": {
        "Status": "Accepted",
        "TimeStamp": "2018-03-10T14:45:28Z"
      }
    },
    "address": {
      "type": "object",
      "properties": {
        "AddressLines": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "City": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        }
      }
    },
    "customer": {
      "type": "object",
      "properties": {
        "CustomerReference": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/address"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "Location": {
          "$ref": "#/definitions/location"
        }
      }
    },
    "fee": {
      "type": "object",
      "properties": {
        "Value": {
          "format": "money",
          "type": "number"
        },
        "Type": {
          "type": "string"
        }
      }
    },
    "fulfillment": {
      "type": "object",
      "properties": {
        "PickupTime": {
          "type": "string",
          "format": "date-time"
        },
        "Method": {
          "type": "string"
        },
        "Table": {
          "type": "string"
        }
      }
    },
    "order-request": {
      "type": "object",
      "properties": {
        "OrderReference": {
          "type": "string"
        },
        "FriendlyOrderReference": {
          "type": "string"
        },
        "EventUpdateUri": {
          "type": "string"
        },
        "Fulfillment": {
          "$ref": "#/definitions/fulfillment"
        },
        "RestaurantReference": {
          "type": "string"
        },
        "Payment": {
          "$ref": "#/definitions/payment"
        },
        "Customer": {
          "$ref": "#/definitions/customer"
        },
        "Basket": {
          "type": "string"
        },
        "CustomerNote": {
          "type": "string"
        },
        "PlacedDate": {
          "type": "string",
          "format": "date-time"
        },
        "DueDate": {
          "type": "string",
          "format": "date-time"
        },
        "TimeStampAccepted": {
          "type": "string",
          "format": "date-time"
        },
        "IsRds": {
          "type": "boolean"
        },
        "RestaurantDetails": {
          "$ref": "#/definitions/restaurant-details"
        },
        "PartnerName": {
          "type": "string"
        },
        "PartnerSubscriptionId": {
          "type": "integer"
        }
      },
      "required": [
        "PlacedDate",
        "DueDate",
        "OrderReference",
        "Payment",
        "Customer",
        "Basket",
        "RestaurantDetails",
        "PartnerSubscriptionId"
      ]
    },
    "payment": {
      "type": "object",
      "properties": {
        "DriverTipValue": {
          "format": "money",
          "type": "number"
        },
        "Total": {
          "format": "money",
          "type": "number"
        },
        "CashOnDelivery": {
          "type": "boolean"
        },
        "RestaurantTipValue": {
          "format": "money",
          "type": "number"
        },
        "DeliveryCharge": {
          "format": "money",
          "type": "number"
        },
        "CardCharges": {
          "format": "money",
          "type": "number"
        },
        "Fees": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fee"
          }
        }
      }
    },
    "restaurant-details": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "integer"
        },
        "Email": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Address": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Postcode": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "Location": {
          "$ref": "#/definitions/location"
        }
      },
      "required": [
        "Id",
        "Email",
        "Name",
        "Address",
        "Location"
      ]
    },
    "item": {
      "type": "object",
      "properties": {
        "Reference": {
          "type": "string"
        },
        "OptionReference": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Quantity": {
          "type": "number",
          "format": "int32"
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/item"
          }
        }
      }
    },
    "order-is-ready-for-preparation": {
      "type": "object",
      "properties": {
        "PartnerOrderId": {
          "type": "string"
        },
        "OrderReference": {
          "type": "string"
        },
        "FriendlyOrderReference": {
          "type": "string"
        },
        "Timezone": {
          "type": "string"
        },
        "IsTest": {
          "type": "boolean"
        },
        "Fulfilment": {
          "type": "object",
          "properties": {
            "Delivery": {
              "type": "object",
              "properties": {
                "PickupTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "DueDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "Address": {
                  "type": "object",
                  "properties": {
                    "Lines": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "City": {
                      "type": "string"
                    },
                    "PostalCode": {
                      "type": "string"
                    },
                    "Geolocation": {
                      "$ref": "#/definitions/location"
                    }
                  }
                },
                "PhoneNumber": {
                  "type": "string"
                }
              }
            },
            "Collection": {
              "type": "object",
              "properties": {
                "PickupTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "PhoneNumber": {
                  "type": "string"
                }
              }
            }
          }
        },
        "Payment": {
          "type": "object",
          "properties": {
            "Lines": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "Type": {
                    "type": "string",
                    "enum": [
                      "card",
                      "cash",
                      "credit",
                      "other"
                    ]
                  },
                  "PayOnFulfilment": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "Customer": {
          "type": "object",
          "properties": {
            "Reference": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            }
          }
        },
        "Items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/item"
          }
        },
        "NoteFromCustomer": {
          "type": "string"
        },
        "PlacedDate": {
          "type": "string",
          "format": "date-time"
        },
        "Restaurant": {
          "type": "object",
          "properties": {
            "Id": {
              "type": "string"
            },
            "Reference": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            },
            "Address": {
              "type": "object",
              "properties": {
                "Lines": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "City": {
                  "type": "string"
                },
                "PostalCode": {
                  "type": "string"
                },
                "Geolocation": {
                  "$ref": "#/definitions/location"
                }
              }
            },
            "PhoneNumber": {
              "type": "string"
            }
          }
        }
      }
    },
    "partner-restaurant-temporary-offline-status": {
      "type": "object",
      "properties": {
        "Status": {
          "enum": [
            "TempOffline",
            "ClosedToday",
            "None"
          ],
          "type": "string"
        },
        "Message": {
          "type": "string"
        }
      },
      "example": {
        "Status": "TempOffline",
        "Message": "Too busy"
      }
    }
  }
}
